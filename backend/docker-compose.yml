name: vnlawadvisor-backend
services:
  kong:
    image: kong:latest
    container_name: kong
    restart: always
    ports:
        - '8000:8000'
        - '8001:8001'
        - '8002:8002'
        - '8003:8003'
        - '8004:8004'
    environment:
        KONG_DATABASE: off
        KONG_PROXY_ACCESS_LOG: /dev/stdout
        KONG_ADMIN_ACCESS_LOG: /dev/stdout
        KONG_PROXY_ERROR_LOG: /dev/stderr
        KONG_ADMIN_ERROR_LOG: /dev/stderr
        KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
        KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl'
    volumes:
      - ./api-gateway/kong.yml:/usr/local/kong/declarative/kong.yml
    networks:
        - app-network
  law-mysql:
    image: mysql:latest
    restart: always
    environment:
        MYSQL_ROOT_PASSWORD: 123456789
        MYSQL_DATABASE: law
        MYSQL_PASSWORD: 123456789
        MYSQL_USER: law
    networks:
        - app-network
  phpmyadmin:
    image: phpmyadmin
    ports:
      - 8081:80
    depends_on:
      - law-mysql
    networks:
      - app-network
    environment:
      PMA_HOST: law-mysql
      UPLOAD_LIMIT: 300M
  law-service:
    build: ./law-service
    restart: always
    depends_on:
      - law-mysql
    volumes:
      - ./law-service:/app
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://law-mysql:3306/law?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: law
      SPRING_DATASOURCE_PASSWORD: 123456789
  auth-service:
    build: ./auth-service
    restart: always
    depends_on:
      - auth-mysql
    ports: 
      - 5000:5000
    volumes:
      - ./auth-service:/app
      - ./auth-service/node_modules:/app/node_modules
    networks:
      - app-network
    environment:
      ENVIRONMENT: development
      PORT: 5000
      DB_HOST: auth-mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: auth
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: root
      ACCESS_TOKEN_KEY: VN-Law-Advisor
      REFRESH_TOKEN_KEY: auth-service
  redis:
      image: redis:latest
      ports:
          - '6379:6379'
      networks:
          - app-network
  auth-mysql:
      image: mysql:latest
      restart: always
      environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: auth
      networks:
          - app-network
  qna-mysql:
    image: mysql:latest
    restart: always
    ports:
        - '3307:3306'
    environment:
        MYSQL_ROOT_PASSWORD: 123456789
        MYSQL_DATABASE: qna
    networks:
        - app-network
  qna-service:
    build: ./rag
    restart: always
    depends_on:
      - qna-mysql
      - redis
    volumes:
      - ./rag:/app
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: 123456789
      MYSQL_DATABASE: qna
      MYSQL_HOST: qna-mysql
      # ST_MODEL_PATH: keepitreal/vietnamese-sbert
      # QA_MODEL_PATH: namngo/videberta-xsmall-finetuned-squad
      REDIS_HOST: redis
      TOPIC_DB_PATH: ./chroma_db_demuc
      ST_MODEL_PATH: ./sentence_transformers_model
      QA_MODEL_PATH: ./qa_model

networks:
    app-network:
        driver: bridge
